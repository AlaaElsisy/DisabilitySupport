// <auto-generated />
using System;
using DisabilitySupport.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DisabilitySupport.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250624202224_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DisabilitySupport.DAL.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.Disabled", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisabilityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactRelation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalConditionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("DisabledPeople");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.DisabledOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisabledId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OfferPostDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ServiceCategorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ServiceTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisabledId");

                    b.HasIndex("ServiceCategorId");

                    b.ToTable("DisabledOffers");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.DisabledRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisabledId")
                        .HasColumnType("int");

                    b.Property<int?>("HelperServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisabledId");

                    b.HasIndex("HelperServiceId");

                    b.ToTable("DisabledRequests");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.Helper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Helpers");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.HelperRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisabledOfferId")
                        .HasColumnType("int");

                    b.Property<int?>("HelperId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DisabledOfferId");

                    b.HasIndex("HelperId");

                    b.ToTable("HelperRequests");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.HelperService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AvailableDateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AvailableDateTo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HelperId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PricePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ServiceCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HelperId");

                    b.HasIndex("ServiceCategoryId");

                    b.ToTable("HelperServices");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisabledRequestId")
                        .HasColumnType("int");

                    b.Property<int?>("HelperRequestId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisabledRequestId");

                    b.HasIndex("HelperRequestId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.ServiceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServiceCategories");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.Disabled", b =>
                {
                    b.HasOne("DisabilitySupport.DAL.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.DisabledOffer", b =>
                {
                    b.HasOne("DisabilitySupport.DAL.Models.Disabled", "Disabled")
                        .WithMany("DisabledOffers")
                        .HasForeignKey("DisabledId");

                    b.HasOne("DisabilitySupport.DAL.Models.ServiceCategory", "ServiceCategory")
                        .WithMany("DisabledOffers")
                        .HasForeignKey("ServiceCategorId");

                    b.Navigation("Disabled");

                    b.Navigation("ServiceCategory");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.DisabledRequest", b =>
                {
                    b.HasOne("DisabilitySupport.DAL.Models.Disabled", "Disabled")
                        .WithMany("DisabledRequests")
                        .HasForeignKey("DisabledId");

                    b.HasOne("DisabilitySupport.DAL.Models.HelperService", "HelperService")
                        .WithMany("DisabledRequests")
                        .HasForeignKey("HelperServiceId");

                    b.Navigation("Disabled");

                    b.Navigation("HelperService");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.Helper", b =>
                {
                    b.HasOne("DisabilitySupport.DAL.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.HelperRequest", b =>
                {
                    b.HasOne("DisabilitySupport.DAL.Models.DisabledOffer", "DisabledOffer")
                        .WithMany()
                        .HasForeignKey("DisabledOfferId");

                    b.HasOne("DisabilitySupport.DAL.Models.Helper", "Helper")
                        .WithMany("HelperRequests")
                        .HasForeignKey("HelperId");

                    b.Navigation("DisabledOffer");

                    b.Navigation("Helper");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.HelperService", b =>
                {
                    b.HasOne("DisabilitySupport.DAL.Models.Helper", "Helper")
                        .WithMany("HelperServices")
                        .HasForeignKey("HelperId");

                    b.HasOne("DisabilitySupport.DAL.Models.ServiceCategory", "ServiceCategory")
                        .WithMany("HelperServices")
                        .HasForeignKey("ServiceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Helper");

                    b.Navigation("ServiceCategory");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.Payment", b =>
                {
                    b.HasOne("DisabilitySupport.DAL.Models.DisabledRequest", "DisabledRequest")
                        .WithMany()
                        .HasForeignKey("DisabledRequestId");

                    b.HasOne("DisabilitySupport.DAL.Models.HelperRequest", "HelperRequest")
                        .WithMany()
                        .HasForeignKey("HelperRequestId");

                    b.Navigation("DisabledRequest");

                    b.Navigation("HelperRequest");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.Disabled", b =>
                {
                    b.Navigation("DisabledOffers");

                    b.Navigation("DisabledRequests");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.Helper", b =>
                {
                    b.Navigation("HelperRequests");

                    b.Navigation("HelperServices");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.HelperService", b =>
                {
                    b.Navigation("DisabledRequests");
                });

            modelBuilder.Entity("DisabilitySupport.DAL.Models.ServiceCategory", b =>
                {
                    b.Navigation("DisabledOffers");

                    b.Navigation("HelperServices");
                });
#pragma warning restore 612, 618
        }
    }
}
